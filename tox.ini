[tox]
envlist =
    quality
    codestyle
    {py27,py34,py35,py36,py37}-{base,np,un,full}

[flake8]
count = False
max-line-length = 160
statistics = True
ignore =
    ; E711 comparison to None should be 'if cond is None:'
    E711
    ; E713 test for membership should be 'not in'
    E713
    ; E714 test for object identity should be 'is not'
    E714
    ; E722 do not use bare except'
    E722
    ; E731 do not assign a lambda expression, use a def
    E731
    ; E741 ambiguous variable name 'l'
    E741
    ; F401 '.formatting.formatter' imported but unused
    F401
    ; F403 'from token import *' used; unable to detect undefined names
    F403
    ; F405 'unicode' may be undefined, or defined from star imports: token
    F405
    ; F811 redefinition of unused 'Loc' from line 117
    F811
    ; F821 undefined name 'basestring'
    F821
    ; F841 local variable 'oldvalue' is assigned to but never used
    F841

    ; DEFAULT IGNORES
    ; W503 line break before binary operator
    W503

[testenv]
deps =
    coverage
    np: {[testenv:numpy]deps}
    un: {[testenv:uncert]deps}
    full: {[testenv:full]deps}
commands =
    coverage run -p --source=pint setup.py test
setenv =
    COVERAGE_FILE=.coverage.{envname}

[testenv:numpy]
deps =
    numpy

[testenv:uncert]
deps =
    uncertainties

[testenv:full]
deps =
    babel
    {[testenv:numpy]deps}
    {[testenv:uncert]deps}

[testenv:quality]
deps =
    flake8
;    flake8-bandit
;    flake8-bugbear
;    flake8-builtins
;    flake8-coding
;    flake8-commas
;    flake8-comprehensions
;    flake8-docstrings
;    flake8-import-order
;    flake8-pep3101
;    flake8-per-file-ignores
;    flake8-quotes
;    flake8-requirements
;    flake8-self
;    flake8-string-format
;    flake8-tidy-imports
;    flake8-todo
;    hacking
;    pep8-naming
;    pyroma
skip_install = true
commands =
    flake8 --version
    flake8 pint setup.py --statistics

[testenv:codestyle]
deps =
    pycodestyle >= 2.4.0
commands =
    pycodestyle --select=W504
